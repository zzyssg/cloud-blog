<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzy.cloudblogblog.dao.BlogMapper">
    <resultMap id="blog" type="com.zzy.cloudblogblog.entity.Blog">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="blog_id" jdbcType="INTEGER" property="blogId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
<!--        <result column="user_id" jdbcType="INTEGER" property="userId"/>-->
<!--        <result column="type_id" jdbcType="INTEGER" property="typeId"/>-->
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="first_picture" jdbcType="VARCHAR" property="firstPicture"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="flag" jdbcType="TINYINT" property="flag"/>
        <result column="views" jdbcType="INTEGER" property="views"/>
        <result column="sharement" jdbcType="BIT" property="sharement"/>
        <result column="commentabled" jdbcType="BIT" property="commentabled"/>
        <result column="published" jdbcType="BIT" property="published"/>
        <result column="recommend" jdbcType="BIT" property="recommend"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="commentCount"  property="commentCount"/>
        <association property="type" javaType="com.zzy.cloudblogblog.entity.Type">
            <id column="type_id" property="typeId" />
            <result column="type_name" property="typeName"/>
        </association>
        <association property="user" javaType="com.zzy.cloudblogblog.entity.User">
            <id column="user_id" property="userId" />
            <result column="username" property="username" />
            <result column="nickname" property="nickname" />
            <result column="email" property="email" />
            <result column="avatar" property="avatar" />
            <result column="update_time" property="updateTime" />
            <result column="userType" property="type"/>
        </association>
        <collection property="comments" javaType="java.util.ArrayList" ofType="com.zzy.cloudblogblog.entity.Comment">
            <id column="comment_id" property="commentId" />
            <result column="blog_id" property="blogId"/>
            <result column="commentUserId" property="userId"/>
            <result column="commentContent" property="content"/>
            <result column="create_time" property="createTime"/>
            <result column="parent_comment_id" property="parentCommentId"/>
        </collection>
    </resultMap>

    <!--查询操作-->
    <select id="listAllBlogs" resultMap="blog">
        select
            b.blog_id, b.title, b.content, b.first_picture,
            b.description, b.flag, b.views, b.sharement, b.commentabled, b.published,
            b.recommend, b.update_time,
            t.type_id, t.type_name,
            u.user_id, u.username, u.nickname, u.email, u.avatar, u.type as userType, u.update_time,
            c.comment_id,  c.content as commentContent, c.create_time, c.parent_comment_id,
            buc.user_id as commentUserId
<!--        ,
            count(c.comment_id) as commentCount-->
        from
            t_blog b
        left join
            t_blog_type bty
        on
            b.blog_id = bty.blog_id
        left join
            t_type t
        on
            bty.type_id = t.type_id
        left join
            t_blog_user bu
        on
            bu.blog_id = b.blog_id
        left join
            t_user u
        on
            bu.user_id = u.user_id
        left join
            t_blog_user_comment buc
        on
            buc.blog_id = b.blog_id
        left join
            t_comment c
        on
            c.comment_id = buc.comment_id
        order by
            b.update_time
        asc
    </select>
    <select id="listBlogsByTypeId" resultMap="blog">
        select
            *
        FROM
            t_blog b
        LEFT JOIN
            t_blog_type bty
        on
            b.blog_id = bty.blog_id
        LEFT join
            t_type ty
        on
            ty.type_id = bty.type_id
        left join
            t_blog_user bu
        on
            bu.blog_id = b.blog_id
        left join
            t_user u
        on
            u.user_id = bu.user_id
        WHERE
            b.type_id = #{typeId}
    </select>
    <select id="listBlogsByCondition" resultMap="blog">
        select
            b.blog_id, b.title, b.content, b.recommend,
            b.update_time, b.type_id, t.type_id, t.type_name
        from
            t_blog b
        left join
            t_blog_type bty
        on
            b.blog_id = bty.blog_id
        left join
            t_type t
        on
            bty.type_id = t.type_id
        <where>
            <if test="title != null">
                and b.title like '%' #{title} '%'
            </if>
            <if test="typeId != null">
                and t.type_id = #{typeId}
            </if>
            <if test="recommend != null">
                and b.recommend = #{recommend}
            </if>
        </where>
        order by
            b.update_time
        asc
    </select>
    <select id="countAllBlogs" resultType="java.lang.Integer">
        select
            count(1)
        from
            t_blog
    </select>
    <select id="getBlogById" resultMap="blog">
        select
            b.blog_id, b.title, b.content, b.first_picture,
            b.description, b.flag, b.views, b.sharement, b.commentabled, b.published,
            b.recommend, b.update_time,
            t.type_id, t.type_name,
            u.user_id, u.username, u.nickname, u.email, u.avatar, u.type as userType, u.update_time,
            c.comment_id,  c.content as commentContent, c.create_time, c.parent_comment_id,
            buc.user_id as commentUserId
        from
            t_blog b
        left join
            t_blog_type bty
        on
            b.blog_id = bty.blog_id
        left join
            t_type t
        on
            bty.type_id = t.type_id
        left join
            t_blog_user bu
        on
            bu.blog_id = b.blog_id
        left join
            t_user u
        on
            bu.user_id = u.user_id
        left join
            t_blog_user_comment buc
        on
            buc.blog_id = b.blog_id
        left join
            t_comment c
        on
            c.comment_id = buc.comment_id
        where
            b.blog_id = #{blogId}
        order by
            b.update_time
        asc
    </select>
    <!--根据用户ID查询此用户的所有blog-->
    <select id="listBlogsByUserId" resultMap="blog">
        select from
            t_blog b
        left join
            t_blog_type bty
        on
            bty.blog_id = b.blog_id
        left join
            t_type ty
        on
            bty.type_id = ty.type_id
        left join
            t_blog_user bu
        on
            bu.blog_id = b.blog_id
        left join
            bu.user_id = u.user_id
        where
            u.user_id = #{userId}
    </select>

    <!--新增操作-->
    <insert id="insertRelativeBlog" parameterType="com.zzy.cloudblogblog.entity.Blog" useGeneratedKeys="true">
        <!--向blog_type表中新增一条记录-->
        insert into
            t_blog_type(blog_id,type_id)
        values
            (#{blogId},#{typeId});

        <!--向blog_user新增一条记录-->
        insert into
            t_blog_user(blog_id,user_id)
        values
            (#{blogId},#{userId});
    </insert>

    <!--删除操作-->
    <delete id="deleteRelativeBlog" parameterType="com.zzy.cloudblogblog.entity.Blog">
        delete from
            t_blog_type
        where
            blog_id = #{blogId};

        delete from
            t_blog_user
        where
            blog_id = #{blogId};
    </delete>

    <!--更新操作-->
    <update id="updateBlog" parameterType="com.zzy.cloudblogblog.entity.Blog">
        update
            t_blog
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            <if test="firstPicture != null">first_picture = #{firstPicture},</if>
<!--            <if test="typeId != null">type_id = #{typeId},</if>-->
            <if test="description != null">description = #{description},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="views != null">views = #{views},</if>
        </set>
        where
            blog_id = #{blogId}
    </update>

</mapper>